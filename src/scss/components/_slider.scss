@use '../abstracts' as *;

.carousel {
  position: relative;
  height: 320px;
  max-width: 450px;
  overflow: hidden;
  margin: auto;

  @include mq(450px) {
    border-radius: 2rem;
  }

  @include mq(768px) {
    width: 375px;
    height: 400px;
  }

  @include mq(1024px) {
    width: 390px;
    height: 420px;
    // margin: 0;
  }

  @include mq(1440px) {
    width: 400px;
    height: 450px;
  }

 

  &__track {
    position: relative;
    height: 100%;
    transition: transform 350ms;
  }
}

.slide {
  position: absolute;
  width: 100%;
  height: 100%;

  & img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
}

// thumbnails
.thumbnails {
  margin-top: 1rem;
  width: 100%;
  height: 10rem;
  justify-content: space-between;
  align-items: center;
  display: none;

  @include mq(768px) {
    display: flex;
    pointer-events: none;
  }

  @include mq(1440px) {
    margin-top: 1.5rem;
  }
}

.thumbnail {
  width: 8rem;
  height: 8rem;
  border-radius: 15px;
  overflow: hidden;
  cursor: pointer;
  transition: .2s;
  object-fit: cover;

  @include mq(1440px) {
    width: 9rem;
  }

  &:hover {
    filter: brightness(120%);
  }

  &.current-slide {
    border: 4px solid $orange;
    filter: brightness(120%); 
  }
}

.slider__container {
  position: relative;

  @include mq(768px) {
    cursor: pointer;
  }
}


.lightbox {
  background-color: rgba(black, .5);
  position: absolute;
  z-index: 2;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  display: none;
  isolation: isolate;

  & .slider__container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    cursor: initial;
  }

  &__close-button {
    width: 2rem;
    height: 2rem;
    position: absolute;
    top: -3.5rem;
    right: 0;
    text-align: center;
    cursor: pointer;
    display: none;

    & path {
      transition: .2s ease;
      fill: $very-dark-blue;
    }
    
    &:hover path {
      fill: $orange;
    }
  }

  & .thumbnail {
    pointer-events: all;
  }

}

.lightbox-open {
  display: block;
}
